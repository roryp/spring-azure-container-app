trigger:
  - main

variables:
  # Update these variables as per your requirements
  containerRegistry: '$(AZURE_CONTAINER_REGISTRY)'
  imageRepository: 'spring-azure-container-app'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
  - job: Build
    displayName: Build and Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      displayName: Build and Test with Maven
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'clean package'

    - task: Docker@2
      displayName: Build and Push Docker image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy to Azure Container App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureCLI@2
      displayName: 'Deploy to Azure Container App'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az containerapp update \
            --name $(CONTAINER_APP_NAME) \
            --resource-group $(RESOURCE_GROUP) \
            --image $(containerRegistry).azurecr.io/$(imageRepository):$(tag) \
            --set-env-vars AZURE_CLIENT_ID=$(AZURE_CLIENT_ID) AZURE_CLIENT_SECRET=$(AZURE_CLIENT_SECRET) AZURE_TENANT_ID=$(AZURE_TENANT_ID)
          
          # Get the URL of the deployed container app
          CONTAINER_APP_URL=$(az containerapp show --name $(CONTAINER_APP_NAME) --resource-group $(RESOURCE_GROUP) --query properties.configuration.ingress.fqdn -o tsv)
          echo "##vso[task.setvariable variable=containerAppUrl;isOutput=true]https://$CONTAINER_APP_URL"
          echo "Container App deployed at: https://$CONTAINER_APP_URL"